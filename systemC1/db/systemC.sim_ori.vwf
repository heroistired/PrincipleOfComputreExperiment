/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 10.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("H1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("H2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("H3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("H4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("V1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("V2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("V3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("V4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RST")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ALUSRCB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data_inH")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data_inH[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inH";
}

SIGNAL("data_inH[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inH";
}

SIGNAL("data_inH[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inH";
}

SIGNAL("data_inH[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inH";
}

SIGNAL("data_inH[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inH";
}

SIGNAL("data_inH[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inH";
}

SIGNAL("data_inH[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inH";
}

SIGNAL("data_inH[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inH";
}

SIGNAL("data_inL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data_inL[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inL";
}

SIGNAL("data_inL[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inL";
}

SIGNAL("data_inL[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inL";
}

SIGNAL("data_inL[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inL";
}

SIGNAL("data_inL[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inL";
}

SIGNAL("data_inL[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inL";
}

SIGNAL("data_inL[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inL";
}

SIGNAL("data_inL[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_inL";
}

SIGNAL("data_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("DI")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DI[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DI";
}

SIGNAL("DI[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DI";
}

SIGNAL("DI[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DI";
}

SIGNAL("DI[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DI";
}

SIGNAL("DI[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DI";
}

SIGNAL("DI[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DI";
}

SIGNAL("DI[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DI";
}

SIGNAL("DI[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DI";
}

SIGNAL("finish")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("flagin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("flagin[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagin";
}

SIGNAL("flagin[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagin";
}

SIGNAL("flagout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("flagout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagout";
}

SIGNAL("flagout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagout";
}

SIGNAL("flagout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagout";
}

SIGNAL("flagout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagout";
}

SIGNAL("flagout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagout";
}

SIGNAL("flagout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagout";
}

SIGNAL("flagout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagout";
}

SIGNAL("flagout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "flagout";
}

SIGNAL("instr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instr[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("IO0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO0[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO0";
}

SIGNAL("IO0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO0";
}

SIGNAL("IO0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO0";
}

SIGNAL("IO0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO0";
}

SIGNAL("IO0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO0";
}

SIGNAL("IO0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO0";
}

SIGNAL("IO0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO0";
}

SIGNAL("IO0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO0";
}

SIGNAL("IO1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO1";
}

SIGNAL("IO1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO1";
}

SIGNAL("IO1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO1";
}

SIGNAL("IO1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO1";
}

SIGNAL("IO1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO1";
}

SIGNAL("IO1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO1";
}

SIGNAL("IO1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO1";
}

SIGNAL("IO1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO1";
}

SIGNAL("IO2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO2";
}

SIGNAL("IO2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO2";
}

SIGNAL("IO2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO2";
}

SIGNAL("IO2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO2";
}

SIGNAL("IO2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO2";
}

SIGNAL("IO2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO2";
}

SIGNAL("IO2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO2";
}

SIGNAL("IO2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO2";
}

SIGNAL("IO3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO3[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO3";
}

SIGNAL("IO3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO3";
}

SIGNAL("IO3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO3";
}

SIGNAL("IO3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO3";
}

SIGNAL("IO3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO3";
}

SIGNAL("IO3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO3";
}

SIGNAL("IO3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO3";
}

SIGNAL("IO3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO3";
}

SIGNAL("IO4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO4[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO4";
}

SIGNAL("IO4[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO4";
}

SIGNAL("IO4[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO4";
}

SIGNAL("IO4[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO4";
}

SIGNAL("IO4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO4";
}

SIGNAL("IO4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO4";
}

SIGNAL("IO4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO4";
}

SIGNAL("IO4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO4";
}

SIGNAL("IO5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO5[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO5";
}

SIGNAL("IO5[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO5";
}

SIGNAL("IO5[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO5";
}

SIGNAL("IO5[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO5";
}

SIGNAL("IO5[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO5";
}

SIGNAL("IO5[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO5";
}

SIGNAL("IO5[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO5";
}

SIGNAL("IO5[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO5";
}

SIGNAL("IO6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO6[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO6";
}

SIGNAL("IO6[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO6";
}

SIGNAL("IO6[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO6";
}

SIGNAL("IO6[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO6";
}

SIGNAL("IO6[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO6";
}

SIGNAL("IO6[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO6";
}

SIGNAL("IO6[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO6";
}

SIGNAL("IO6[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO6";
}

SIGNAL("io_write")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LD1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("memtoreg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ND")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ND[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ND";
}

SIGNAL("ND[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ND";
}

SIGNAL("ND[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ND";
}

SIGNAL("ND[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ND";
}

SIGNAL("ND[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ND";
}

SIGNAL("ND[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ND";
}

SIGNAL("ND[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ND";
}

SIGNAL("ND[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ND";
}

SIGNAL("num")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("num[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "num";
}

SIGNAL("num[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "num";
}

SIGNAL("num[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "num";
}

SIGNAL("num[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "num";
}

SIGNAL("pc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pc[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("pc[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc";
}

SIGNAL("Q1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q1";
}

SIGNAL("Q1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q1";
}

SIGNAL("Q1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q1";
}

SIGNAL("Q1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q1";
}

SIGNAL("Q1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q1";
}

SIGNAL("Q1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q1";
}

SIGNAL("Q1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q1";
}

SIGNAL("Q1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q1";
}

SIGNAL("Q2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Q2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q2";
}

SIGNAL("Q2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q2";
}

SIGNAL("Q2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q2";
}

SIGNAL("Q2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q2";
}

SIGNAL("Q2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q2";
}

SIGNAL("Q2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q2";
}

SIGNAL("Q2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q2";
}

SIGNAL("Q2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Q2";
}

SIGNAL("reg_we")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("S[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("S[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "S";
}

SIGNAL("seg_sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("seg_sel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg_sel";
}

SIGNAL("seg_sel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg_sel";
}

SIGNAL("seg_sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg_sel";
}

SIGNAL("seg_sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "seg_sel";
}

SIGNAL("symbol")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("symbol[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "symbol";
}

SIGNAL("symbol[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "symbol";
}

SIGNAL("symbol[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "symbol";
}

SIGNAL("symbol[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "symbol";
}

SIGNAL("wrflag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("writemem")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO7")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 1;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO7[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IO7";
}

SIGNAL("ram")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ram[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram";
}

SIGNAL("ram[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram";
}

SIGNAL("ram[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram";
}

SIGNAL("ram[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram";
}

SIGNAL("ram[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram";
}

SIGNAL("ram[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram";
}

SIGNAL("ram[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram";
}

SIGNAL("ram[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ram";
}

SIGNAL("io_read")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "q";
}

SIGNAL("cs")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("cs[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cs";
}

SIGNAL("cs[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cs";
}

SIGNAL("cs[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "cs";
}

SIGNAL("IO7[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO7[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO7[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO7[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO7[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO7[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IO7[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("H1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 150.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 205;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
	}
}

TRANSITION_LIST("H2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 130.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 170.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 206;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("H3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 170.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 206;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("H4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 130.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 130.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 10.0;
				LEVEL 0 FOR 30.0;
			}
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 206;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("V1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 540.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 8850.0;
	}
}

TRANSITION_LIST("V2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 8650.0;
	}
}

TRANSITION_LIST("V3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 610.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 9290.0;
	}
}

TRANSITION_LIST("V4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1470.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 8260.0;
	}
}

TRANSITION_LIST("RST")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}

TRANSITION_LIST("ALUSRCB")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 170.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 7970.0;
	}
}

TRANSITION_LIST("data_inH[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inH[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inH[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inH[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inH[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inH[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inH[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inH[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inL[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inL[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inL[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inL[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inL[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inL[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inL[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_inL[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("data_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 9995.0;
	}
}

TRANSITION_LIST("data_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 110.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 340.0;
		LEVEL X FOR 7945.0;
	}
}

TRANSITION_LIST("data_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 240.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 730.0;
		LEVEL X FOR 7945.0;
	}
}

TRANSITION_LIST("data_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 315.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		LEVEL X FOR 7945.0;
	}
}

TRANSITION_LIST("data_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 315.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1140.0;
		LEVEL X FOR 7945.0;
	}
}

TRANSITION_LIST("data_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 115.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1150.0;
		LEVEL X FOR 7945.0;
	}
}

TRANSITION_LIST("data_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 915.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 230.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 340.0;
		LEVEL X FOR 7945.0;
	}
}

TRANSITION_LIST("data_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 515.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 1170.0;
		LEVEL X FOR 7945.0;
	}
}

TRANSITION_LIST("DI[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 65.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("DI[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 65.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("DI[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 65.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("DI[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("DI[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL U FOR 5.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("DI[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("DI[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("DI[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 27;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("finish")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1695.0;
		LEVEL 1 FOR 8305.0;
	}
}

TRANSITION_LIST("flagin[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("flagin[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 40.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("flagout[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("flagout[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("flagout[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("flagout[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("flagout[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("flagout[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("flagout[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("flagout[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("instr[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 7980.0;
	}
}

TRANSITION_LIST("instr[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("instr[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7970.0;
	}
}

TRANSITION_LIST("instr[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7990.0;
	}
}

TRANSITION_LIST("instr[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1810.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("instr[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("instr[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1810.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("instr[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7970.0;
	}
}

TRANSITION_LIST("instr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("instr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("instr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("instr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("instr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1820.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7970.0;
	}
}

TRANSITION_LIST("instr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 110.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8010.0;
	}
}

TRANSITION_LIST("instr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7970.0;
	}
}

TRANSITION_LIST("instr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO0[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10000.0;
	}
}

TRANSITION_LIST("IO2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO3[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO3[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO4[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO4[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO4[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO4[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO4[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO4[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO4[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO4[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO5[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO5[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO5[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO5[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO5[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO5[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO5[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO5[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO6[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO6[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO6[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO6[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO6[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO6[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO6[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 10;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 17;
			LEVEL Z FOR 5.0;
			LEVEL 1 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("IO6[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("io_write")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2030.0;
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("LD1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000.0;
	}
}

TRANSITION_LIST("memtoreg")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 50.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 8010.0;
	}
}

TRANSITION_LIST("ND[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("ND[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("ND[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("ND[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("ND[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("ND[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("ND[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1810.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("ND[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7970.0;
	}
}

TRANSITION_LIST("num[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("num[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 8635.0;
	}
}

TRANSITION_LIST("num[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 8835.0;
	}
}

TRANSITION_LIST("num[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 225.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 8635.0;
	}
}

TRANSITION_LIST("pc[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2045.0;
		LEVEL X FOR 7955.0;
	}
}

TRANSITION_LIST("pc[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2035.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("pc[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1965.0;
		LEVEL 1 FOR 70.0;
		LEVEL X FOR 7965.0;
	}
}

TRANSITION_LIST("pc[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1885.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 60.0;
		LEVEL X FOR 7975.0;
	}
}

TRANSITION_LIST("pc[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1805.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 140.0;
		LEVEL X FOR 7975.0;
	}
}

TRANSITION_LIST("pc[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL X FOR 7975.0;
	}
}

TRANSITION_LIST("pc[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL X FOR 7975.0;
	}
}

TRANSITION_LIST("pc[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 88;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 7975.0;
	}
}

TRANSITION_LIST("Q1[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 255.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("Q1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 255.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("Q1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 255.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("Q1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 110.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 7955.0;
	}
}

TRANSITION_LIST("Q1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 155.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("Q1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 7955.0;
	}
}

TRANSITION_LIST("Q1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 7955.0;
	}
}

TRANSITION_LIST("Q1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 7955.0;
	}
}

TRANSITION_LIST("Q2[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 220.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL U FOR 15.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("Q2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 220.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL U FOR 15.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("Q2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 220.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL U FOR 15.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("Q2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 95.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 7955.0;
	}
}

TRANSITION_LIST("Q2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 120.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL U FOR 15.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("Q2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 95.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 7955.0;
	}
}

TRANSITION_LIST("Q2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL U FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 7955.0;
	}
}

TRANSITION_LIST("Q2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 7955.0;
	}
}

TRANSITION_LIST("reg_we")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("S[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 295.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("S[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 295.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("S[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 295.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("S[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("S[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("S[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("S[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 30.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("S[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("seg_sel[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 249;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("seg_sel[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 249;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("seg_sel[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 249;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("seg_sel[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 249;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
	}
}

TRANSITION_LIST("symbol[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 8365.0;
	}
}

TRANSITION_LIST("symbol[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 8245.0;
	}
}

TRANSITION_LIST("symbol[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 8365.0;
	}
}

TRANSITION_LIST("symbol[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 140.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 8365.0;
	}
}

TRANSITION_LIST("wrflag")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000.0;
	}
}

TRANSITION_LIST("writemem")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1820.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO7[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 27;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("ram[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL U FOR 50.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 45.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 35.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 7990.0;
	}
}

TRANSITION_LIST("ram[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL U FOR 50.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 45.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 35.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 7990.0;
	}
}

TRANSITION_LIST("ram[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL U FOR 50.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 45.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 35.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 7990.0;
	}
}

TRANSITION_LIST("ram[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL U FOR 50.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 45.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL U FOR 10.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 35.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 7990.0;
	}
}

TRANSITION_LIST("ram[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL U FOR 50.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 35.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 7990.0;
	}
}

TRANSITION_LIST("ram[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL U FOR 50.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL U FOR 10.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 35.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 7990.0;
	}
}

TRANSITION_LIST("ram[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL U FOR 50.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 3;
			LEVEL U FOR 10.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 7990.0;
	}
}

TRANSITION_LIST("ram[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL U FOR 10.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 0 FOR 10.0;
			LEVEL U FOR 50.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 50.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL U FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL U FOR 10.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL U FOR 35.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL U FOR 7990.0;
	}
}

TRANSITION_LIST("io_read")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 55.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL U FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 7960.0;
	}
}

TRANSITION_LIST("q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1820.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL X FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 8005.0;
	}
}

TRANSITION_LIST("q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1820.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL X FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 8005.0;
	}
}

TRANSITION_LIST("q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1820.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL X FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 8005.0;
	}
}

TRANSITION_LIST("q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL X FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 8005.0;
	}
}

TRANSITION_LIST("q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1820.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 4;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 8005.0;
	}
}

TRANSITION_LIST("q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1820.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL X FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL X FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 8005.0;
	}
}

TRANSITION_LIST("q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1820.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL X FOR 20.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL X FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL X FOR 8005.0;
	}
}

TRANSITION_LIST("q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL X FOR 1820.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL X FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL X FOR 8005.0;
	}
}

TRANSITION_LIST("cs[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 8260.0;
	}
}

TRANSITION_LIST("cs[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("cs[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 29;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 7970.0;
	}
}

TRANSITION_LIST("IO7[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO7[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO7[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO7[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO7[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO7[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

TRANSITION_LIST("IO7[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 28;
			LEVEL Z FOR 5.0;
			LEVEL 0 FOR 55.0;
		}
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 7960.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "RST";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "H1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "H2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "H3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "H4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "V1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "V2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "V3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "V4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ALUSRCB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data_inH";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "data_inH[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "data_inH[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "data_inH[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "data_inH[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "data_inH[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "data_inH[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "data_inH[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "data_inH[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "data_inL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "data_inL[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "data_inL[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "data_inL[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "data_inL[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "data_inL[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "data_inL[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "data_inL[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "data_inL[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "data_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "DI";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "DI[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "DI[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "DI[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "DI[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "DI[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "DI[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "DI[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "DI[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "finish";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "flagin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50;
}

DISPLAY_LINE
{
	CHANNEL = "flagin[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "flagin[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "flagout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
	CHILDREN = 52, 53, 54, 55, 56, 57, 58, 59;
}

DISPLAY_LINE
{
	CHANNEL = "flagout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "flagout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "flagout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "flagout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "flagout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "flagout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "flagout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "flagout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "instr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
	CHILDREN = 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76;
}

DISPLAY_LINE
{
	CHANNEL = "instr[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "instr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "IO0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 0;
	CHILDREN = 78, 79, 80, 81, 82, 83, 84, 85;
}

DISPLAY_LINE
{
	CHANNEL = "IO0[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "IO0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "IO0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "IO0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "IO0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "IO0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "IO0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "IO0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "IO1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 0;
	CHILDREN = 87, 88, 89, 90, 91, 92, 93, 94;
}

DISPLAY_LINE
{
	CHANNEL = "IO1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "IO1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "IO1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "IO1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "IO1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "IO1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "IO1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "IO1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "IO2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 0;
	CHILDREN = 96, 97, 98, 99, 100, 101, 102, 103;
}

DISPLAY_LINE
{
	CHANNEL = "IO2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "IO2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "IO2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "IO2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "IO2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "IO2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "IO2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "IO2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 95;
}

DISPLAY_LINE
{
	CHANNEL = "IO3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 0;
	CHILDREN = 105, 106, 107, 108, 109, 110, 111, 112;
}

DISPLAY_LINE
{
	CHANNEL = "IO3[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "IO3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "IO3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "IO3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "IO3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "IO3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "IO3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "IO3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "IO4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 0;
	CHILDREN = 114, 115, 116, 117, 118, 119, 120, 121;
}

DISPLAY_LINE
{
	CHANNEL = "IO4[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "IO4[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "IO4[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "IO4[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "IO4[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "IO4[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "IO4[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "IO4[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 113;
}

DISPLAY_LINE
{
	CHANNEL = "IO5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 0;
	CHILDREN = 123, 124, 125, 126, 127, 128, 129, 130;
}

DISPLAY_LINE
{
	CHANNEL = "IO5[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "IO5[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "IO5[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "IO5[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "IO5[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "IO5[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "IO5[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "IO5[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "IO6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 0;
	CHILDREN = 132, 133, 134, 135, 136, 137, 138, 139;
}

DISPLAY_LINE
{
	CHANNEL = "IO6[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "IO6[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "IO6[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 134;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "IO6[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "IO6[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "IO6[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "IO6[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "IO6[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 131;
}

DISPLAY_LINE
{
	CHANNEL = "io_write";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 140;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LD1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 141;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "memtoreg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 142;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ND";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 143;
	TREE_LEVEL = 0;
	CHILDREN = 144, 145, 146, 147, 148, 149, 150, 151;
}

DISPLAY_LINE
{
	CHANNEL = "ND[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 143;
}

DISPLAY_LINE
{
	CHANNEL = "ND[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 143;
}

DISPLAY_LINE
{
	CHANNEL = "ND[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 146;
	TREE_LEVEL = 1;
	PARENT = 143;
}

DISPLAY_LINE
{
	CHANNEL = "ND[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 143;
}

DISPLAY_LINE
{
	CHANNEL = "ND[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 143;
}

DISPLAY_LINE
{
	CHANNEL = "ND[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 143;
}

DISPLAY_LINE
{
	CHANNEL = "ND[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 143;
}

DISPLAY_LINE
{
	CHANNEL = "ND[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 143;
}

DISPLAY_LINE
{
	CHANNEL = "num";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 152;
	TREE_LEVEL = 0;
	CHILDREN = 153, 154, 155, 156;
}

DISPLAY_LINE
{
	CHANNEL = "num[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 152;
}

DISPLAY_LINE
{
	CHANNEL = "num[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 152;
}

DISPLAY_LINE
{
	CHANNEL = "num[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 152;
}

DISPLAY_LINE
{
	CHANNEL = "num[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 152;
}

DISPLAY_LINE
{
	CHANNEL = "pc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 157;
	TREE_LEVEL = 0;
	CHILDREN = 158, 159, 160, 161, 162, 163, 164, 165;
}

DISPLAY_LINE
{
	CHANNEL = "pc[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 158;
	TREE_LEVEL = 1;
	PARENT = 157;
}

DISPLAY_LINE
{
	CHANNEL = "pc[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 159;
	TREE_LEVEL = 1;
	PARENT = 157;
}

DISPLAY_LINE
{
	CHANNEL = "pc[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 160;
	TREE_LEVEL = 1;
	PARENT = 157;
}

DISPLAY_LINE
{
	CHANNEL = "pc[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 161;
	TREE_LEVEL = 1;
	PARENT = 157;
}

DISPLAY_LINE
{
	CHANNEL = "pc[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 162;
	TREE_LEVEL = 1;
	PARENT = 157;
}

DISPLAY_LINE
{
	CHANNEL = "pc[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 163;
	TREE_LEVEL = 1;
	PARENT = 157;
}

DISPLAY_LINE
{
	CHANNEL = "pc[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 164;
	TREE_LEVEL = 1;
	PARENT = 157;
}

DISPLAY_LINE
{
	CHANNEL = "pc[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 165;
	TREE_LEVEL = 1;
	PARENT = 157;
}

DISPLAY_LINE
{
	CHANNEL = "Q1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 166;
	TREE_LEVEL = 0;
	CHILDREN = 167, 168, 169, 170, 171, 172, 173, 174;
}

DISPLAY_LINE
{
	CHANNEL = "Q1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 167;
	TREE_LEVEL = 1;
	PARENT = 166;
}

DISPLAY_LINE
{
	CHANNEL = "Q1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 168;
	TREE_LEVEL = 1;
	PARENT = 166;
}

DISPLAY_LINE
{
	CHANNEL = "Q1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 169;
	TREE_LEVEL = 1;
	PARENT = 166;
}

DISPLAY_LINE
{
	CHANNEL = "Q1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 170;
	TREE_LEVEL = 1;
	PARENT = 166;
}

DISPLAY_LINE
{
	CHANNEL = "Q1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 171;
	TREE_LEVEL = 1;
	PARENT = 166;
}

DISPLAY_LINE
{
	CHANNEL = "Q1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 172;
	TREE_LEVEL = 1;
	PARENT = 166;
}

DISPLAY_LINE
{
	CHANNEL = "Q1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 173;
	TREE_LEVEL = 1;
	PARENT = 166;
}

DISPLAY_LINE
{
	CHANNEL = "Q1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 174;
	TREE_LEVEL = 1;
	PARENT = 166;
}

DISPLAY_LINE
{
	CHANNEL = "Q2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 175;
	TREE_LEVEL = 0;
	CHILDREN = 176, 177, 178, 179, 180, 181, 182, 183;
}

DISPLAY_LINE
{
	CHANNEL = "Q2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 176;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "Q2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 177;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "Q2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 178;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "Q2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 179;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "Q2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 180;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "Q2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 181;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "Q2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 182;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "Q2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 183;
	TREE_LEVEL = 1;
	PARENT = 175;
}

DISPLAY_LINE
{
	CHANNEL = "reg_we";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 184;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "S";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 185;
	TREE_LEVEL = 0;
	CHILDREN = 186, 187, 188, 189, 190, 191, 192, 193;
}

DISPLAY_LINE
{
	CHANNEL = "S[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 186;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "S[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 187;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "S[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 188;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "S[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 189;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "S[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 190;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "S[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 191;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "S[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 192;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "S[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 193;
	TREE_LEVEL = 1;
	PARENT = 185;
}

DISPLAY_LINE
{
	CHANNEL = "wrflag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 194;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "writemem";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 195;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IO7";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 196;
	TREE_LEVEL = 0;
	CHILDREN = 197;
}

DISPLAY_LINE
{
	CHANNEL = "IO7[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 197;
	TREE_LEVEL = 1;
	PARENT = 196;
}

DISPLAY_LINE
{
	CHANNEL = "ram";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 198;
	TREE_LEVEL = 0;
	CHILDREN = 199, 200, 201, 202, 203, 204, 205, 206;
}

DISPLAY_LINE
{
	CHANNEL = "ram[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 199;
	TREE_LEVEL = 1;
	PARENT = 198;
}

DISPLAY_LINE
{
	CHANNEL = "ram[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 200;
	TREE_LEVEL = 1;
	PARENT = 198;
}

DISPLAY_LINE
{
	CHANNEL = "ram[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 201;
	TREE_LEVEL = 1;
	PARENT = 198;
}

DISPLAY_LINE
{
	CHANNEL = "ram[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 202;
	TREE_LEVEL = 1;
	PARENT = 198;
}

DISPLAY_LINE
{
	CHANNEL = "ram[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 203;
	TREE_LEVEL = 1;
	PARENT = 198;
}

DISPLAY_LINE
{
	CHANNEL = "ram[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 204;
	TREE_LEVEL = 1;
	PARENT = 198;
}

DISPLAY_LINE
{
	CHANNEL = "ram[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 205;
	TREE_LEVEL = 1;
	PARENT = 198;
}

DISPLAY_LINE
{
	CHANNEL = "ram[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 206;
	TREE_LEVEL = 1;
	PARENT = 198;
}

DISPLAY_LINE
{
	CHANNEL = "io_read";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 207;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 208;
	TREE_LEVEL = 0;
	CHILDREN = 209, 210, 211, 212, 213, 214, 215, 216;
}

DISPLAY_LINE
{
	CHANNEL = "q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 209;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 210;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 211;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 212;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 213;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 214;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 215;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 216;
	TREE_LEVEL = 1;
	PARENT = 208;
}

DISPLAY_LINE
{
	CHANNEL = "symbol";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 217;
	TREE_LEVEL = 0;
	CHILDREN = 218, 219, 220, 221;
}

DISPLAY_LINE
{
	CHANNEL = "symbol[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 218;
	TREE_LEVEL = 1;
	PARENT = 217;
}

DISPLAY_LINE
{
	CHANNEL = "symbol[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 219;
	TREE_LEVEL = 1;
	PARENT = 217;
}

DISPLAY_LINE
{
	CHANNEL = "symbol[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 220;
	TREE_LEVEL = 1;
	PARENT = 217;
}

DISPLAY_LINE
{
	CHANNEL = "symbol[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 221;
	TREE_LEVEL = 1;
	PARENT = 217;
}

DISPLAY_LINE
{
	CHANNEL = "seg_sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 222;
	TREE_LEVEL = 0;
	CHILDREN = 223, 224, 225, 226;
}

DISPLAY_LINE
{
	CHANNEL = "seg_sel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 223;
	TREE_LEVEL = 1;
	PARENT = 222;
}

DISPLAY_LINE
{
	CHANNEL = "seg_sel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 224;
	TREE_LEVEL = 1;
	PARENT = 222;
}

DISPLAY_LINE
{
	CHANNEL = "seg_sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 225;
	TREE_LEVEL = 1;
	PARENT = 222;
}

DISPLAY_LINE
{
	CHANNEL = "seg_sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 226;
	TREE_LEVEL = 1;
	PARENT = 222;
}

DISPLAY_LINE
{
	CHANNEL = "cs";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 227;
	TREE_LEVEL = 0;
	CHILDREN = 228, 229, 230;
}

DISPLAY_LINE
{
	CHANNEL = "cs[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 228;
	TREE_LEVEL = 1;
	PARENT = 227;
}

DISPLAY_LINE
{
	CHANNEL = "cs[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 229;
	TREE_LEVEL = 1;
	PARENT = 227;
}

DISPLAY_LINE
{
	CHANNEL = "cs[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 230;
	TREE_LEVEL = 1;
	PARENT = 227;
}

DISPLAY_LINE
{
	CHANNEL = "IO7[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 231;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IO7[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 232;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IO7[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 233;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IO7[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 234;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IO7[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 235;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IO7[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 236;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IO7[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 237;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 15150;
	MASTER = TRUE;
}
;
